section .text

global _start
global initialize_TPs

_start:
	mov  eax, TP
	mov  ebx, 10
	push ebx
	push eax
	call initialize_TPs
	pop  eax
	pop  ebx
;	mov  ecx, 10
;	push ecx
;	mov  ecx, TP
;_print_start:
;	mov  edx, 387
;	mov  ebx, 1
;	mov  eax, 4
;	int  0x80
;	add  ecx, 387
;	mov  eax, ecx
;	pop  ecx
;	sub  ecx, 1
;	push ecx
;	cmp  ecx, 0
;	je   _print_done
;	mov  ecx, eax
;	jmp  _print_start
;_print_done:
;	pop  ecx
    mov  ecx, ISBA_GLOB_MN_ADDR ;ISBA_RMIK_AREA
    mov  edx, 82 ;206
    mov  ebx, 1
    mov  eax, 4
    int  0x80
	mov  eax, 1
	int  0x80

initialize_TPs: ;void initialize_TPs(TP* tps, unsigned int lines)
	push ebp
	mov  ebp, esp
	
	; first off, create the ISBA_RMIK_AREA statically
	mov  eax, ISBA_RMIK_AREA
	mov  DWORD[eax], 0x00786165
	add  eax, 4
	mov  DWORD[eax], 0x00786365
	add  eax, 4
	mov  DWORD[eax], 0x00786465
	add  eax, 4
	mov  DWORD[eax], 0x00786265
	add  eax, 4
	mov  DWORD[eax], 0x00697365
	add  eax, 4
	mov  DWORD[eax], 0x00696465
	add  eax, 4
	mov  DWORD[eax], 0x00706265
	add  eax, 4
	mov  DWORD[eax], 0x00707365
	add  eax, 4
	mov  DWORD[eax], 0x63007861
	add  eax, 4
	mov  DWORD[eax], 0x78640078
	add  eax, 4
	mov  DWORD[eax], 0x00786200
	add  eax, 4
	mov  DWORD[eax], 0x61006861
	add  eax, 4
	mov  DWORD[eax], 0x6862006C
	add  eax, 4
	mov  DWORD[eax], 0x006C6200
	add  eax, 4
	mov  DWORD[eax], 0x63006863
	add  eax, 4
	mov  DWORD[eax], 0x6864006C
	add  eax, 4
	mov  DWORD[eax], 0x006C6400
	add  eax, 4
	mov  DWORD[eax], 0x64006973
	add  eax, 4
	mov  DWORD[eax], 0x70620069
	add  eax, 4
	mov  DWORD[eax], 0x00707300
	add  eax, 4
	mov  DWORD[eax], 0x7830002B
	add  eax, 4
	mov  DWORD[eax], 0x54594200
	add  eax, 4
	mov  DWORD[eax], 0x57005B45
	add  eax, 4
	mov  DWORD[eax], 0x5B44524F
	add  eax, 4
	mov  DWORD[eax], 0x4F574400
	add  eax, 4
	mov  DWORD[eax], 0x005B4452
	add  eax, 4
	mov  DWORD[eax], 0x524F5751
	add  eax, 4
	mov  DWORD[eax], 0x58005B44
	add  eax, 4
	mov  DWORD[eax], 0x4F574D4D
	add  eax, 4
	mov  DWORD[eax], 0x005B4452
	add  eax, 4
	mov  DWORD[eax], 0x00000000
	add  eax, 4
	mov  DWORD[eax], 0x00000000
	add  eax, 4
	mov  DWORD[eax], 0x00000000
	add  eax, 4
	mov  DWORD[eax], 0x00000000
	add  eax, 4
	mov  DWORD[eax], 0x00000000
	add  eax, 4
	mov  DWORD[eax], 0x00000000
	add  eax, 4
	mov  DWORD[eax], 0x00000000
	add  eax, 4
	mov  DWORD[eax], 0x00000000
	add  eax, 4
	mov  DWORD[eax], 0x00000000
	add  eax, 4
	mov  DWORD[eax], 0x00000000
	add  eax, 4
	mov  DWORD[eax], 0x00000000
	add  eax, 4
	mov  DWORD[eax], 0x00000000
	add  eax, 4
	mov  DWORD[eax], 0x00000000
	add  eax, 4
	mov  DWORD[eax], 0x00000000
	add  eax, 4
	mov  DWORD[eax], 0x00000000
	add  eax, 4
	mov  DWORD[eax], 0x00000000
	add  eax, 4
	mov  DWORD[eax], 0x00000000
	add  eax, 4
	mov  DWORD[eax], 0x00000000
	add  eax, 4
	mov  DWORD[eax], 0x00000000
	add  eax, 4
	mov  DWORD[eax], 0x00000000
	add  eax, 4
	mov  DWORD[eax], 0x00000000
	add  eax, 4
	mov  WORD[eax], 0x0000

	; then create the GLOB_MN_ADDR
	mov  eax, ISBA_GLOB_MN_ADDR
	mov  DWORD[eax], 0x00766F6D
    add  eax, 4
    mov  DWORD[eax], 0x00646461
    add  eax, 4
    mov  DWORD[eax], 0x00627573
    add  eax, 4
    mov  DWORD[eax], 0x00706D63
    add  eax, 4
    mov  DWORD[eax], 0x00726F78
    add  eax, 4
    mov  DWORD[eax], 0x00706D6A
    add  eax, 4
    mov  DWORD[eax], 0x00706F70
    add  eax, 4
    mov  DWORD[eax], 0x00656E6A
    add  eax, 4
    mov  DWORD[eax], 0x007A6E6A
    add  eax, 4
    mov  DWORD[eax], 0x00746E69
    add  eax, 4
    mov  DWORD[eax], 0x00746572
    add  eax, 4
    mov  DWORD[eax], 0x00766F6D
    add  eax, 4
    mov  DWORD[eax], 0x006C756D
    add  eax, 4
    mov  DWORD[eax], 0x00766964
    add  eax, 4
    mov  DWORD[eax], 0x6C6C6163
    add  eax, 4
    mov  DWORD[eax], 0x73757000
    add  eax, 4
    mov  DWORD[eax], 0x6D690068
    add  eax, 4
    mov  DWORD[eax], 0x69006C75
    add  eax, 4
    mov  DWORD[eax], 0x00766964
    add  eax, 4
    mov  DWORD[eax], 0x6A00656A
    add  eax, 4
    mov  WORD[eax], 0x007A

	xor  eax, eax
	mov  eax, DWORD[ebp+0x8]
	mov  ecx, DWORD[ebp+0xc]
	xor  edx, edx
_X:
	mov  BYTE[eax], 0
	add  eax, 1
	add  edx, 1
	cmp  edx, 384
	jne  _X
	mov  BYTE[eax], 0x21
	add  eax, 1
	mov  BYTE[eax], 0x21
	add  eax, 1
	mov  BYTE[eax], 0x21
	add  eax, 1
	sub  ecx, 1
	xor  edx, edx
	cmp  ecx, 0
	jne  _X
_done:
	mov  esp, ebp
	pop  ebp
	ret
	
	
section .data
	TP: times 40000 db '?'
	ISBA_RMIK_AREA: times 206 db '?'
    ISBA_GLOB_MN_ADDR: times 82 db '?'


	bytes ~> (assume TP is at physical address ISBA_TPs = 0x0D819000 and 
	          ISBA_RMIK_AREA at 0x0DCDBE1E. Also ISBA_GLOB_MN_ADDR is at 0x0DCDBA14)
	{
		0x55, 0x89, 0xE5, 0xB8, 0x1E, 0xBE, 0xCD, 0x0D, 0xC7, 0x00, 0x65, 0x61, 0x78, 0x00, 0x83, 0xC0, 
		0x04, 0xC7, 0x00, 0x65, 0x63, 0x78, 0x00, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x65, 0x64, 0x78, 0x00, 
		0x83, 0xC0, 0x04, 0xC7, 0x00, 0x65, 0x62, 0x78, 0x00, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x65, 0x73, 
		0x69, 0x00, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x65, 0x64, 0x69, 0x00, 0x83, 0xC0, 0x04, 0xC7, 0x00, 
		0x65, 0x62, 0x70, 0x00, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x65, 0x73, 0x70, 0x00, 0x83, 0xC0, 0x04, 
		0xC7, 0x00, 0x61, 0x78, 0x00, 0x63, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x78, 0x00, 0x64, 0x78, 0x83, 
		0xC0, 0x04, 0xC7, 0x00, 0x00, 0x62, 0x78, 0x00, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x61, 0x68, 0x00, 
		0x61, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x6C, 0x00, 0x62, 0x68, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x00, 
		0x62, 0x6C, 0x00, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x63, 0x68, 0x00, 0x63, 0x83, 0xC0, 0x04, 0xC7, 
		0x00, 0x6C, 0x00, 0x64, 0x68, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x00, 0x64, 0x6C, 0x00, 0x83, 0xC0, 
		0x04, 0xC7, 0x00, 0x73, 0x69, 0x00, 0x64, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x69, 0x00, 0x62, 0x70, 
		0x83, 0xC0, 0x04, 0xC7, 0x00, 0x00, 0x73, 0x70, 0x00, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x2B, 0x00, 
		0x30, 0x78, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x00, 0x42, 0x59, 0x54, 0x83, 0xC0, 0x04, 0xC7, 0x00, 
		0x45, 0x5B, 0x00, 0x57, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x4F, 0x52, 0x44, 0x5B, 0x83, 0xC0, 0x04, 
		0xC7, 0x00, 0x00, 0x44, 0x57, 0x4F, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x52, 0x44, 0x5B, 0x00, 0x83, 
		0xC0, 0x04, 0xC7, 0x00, 0x51, 0x57, 0x4F, 0x52, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x44, 0x5B, 0x00, 
		0x58, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x4D, 0x4D, 0x57, 0x4F, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x52, 
		0x44, 0x5B, 0x00, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x83, 0xC0, 0x04, 0xC7, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x83, 0xC0, 
		0x04, 0xC7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x83, 0xC0, 0x04, 0xC7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x00, 0x00, 
		0x00, 0x00, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x83, 0xC0, 0x04, 0xC7, 0x00, 
		0x00, 0x00, 0x00, 0x00, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x83, 0xC0, 0x04, 
		0xC7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x83, 
		0xC0, 0x04, 0xC7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x00, 0x00, 0x00, 
		0x00, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x00, 
		0x00, 0x00, 0x00, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x83, 0xC0, 0x04, 0xC7, 
		0x00, 0x00, 0x00, 0x00, 0x00, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x83, 0xC0, 
		0x04, 0xC7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x00, 0x00, 0x00, 0x00, 
		0x83, 0xC0, 0x04, 0x66, 0xC7, 0x00, 0x00, 0x00, 0xB8, 0x14, 0xBA, 0xCD, 0x0D, 0xC7, 0x00, 0x6D, 
		0x6F, 0x76, 0x00, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x61, 0x64, 0x64, 0x00, 0x83, 0xC0, 0x04, 0xC7, 
		0x00, 0x73, 0x75, 0x62, 0x00, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x63, 0x6D, 0x70, 0x00, 0x83, 0xC0, 
		0x04, 0xC7, 0x00, 0x78, 0x6F, 0x72, 0x00, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x6A, 0x6D, 0x70, 0x00, 
		0x83, 0xC0, 0x04, 0xC7, 0x00, 0x70, 0x6F, 0x70, 0x00, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x6A, 0x6E, 
		0x65, 0x00, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x6A, 0x6E, 0x7A, 0x00, 0x83, 0xC0, 0x04, 0xC7, 0x00, 
		0x69, 0x6E, 0x74, 0x00, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x72, 0x65, 0x74, 0x00, 0x83, 0xC0, 0x04, 
		0xC7, 0x00, 0x6D, 0x6F, 0x76, 0x00, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x6D, 0x75, 0x6C, 0x00, 0x83, 
		0xC0, 0x04, 0xC7, 0x00, 0x64, 0x69, 0x76, 0x00, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x63, 0x61, 0x6C, 
		0x6C, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x00, 0x70, 0x75, 0x73, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x68, 
		0x00, 0x69, 0x6D, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x75, 0x6C, 0x00, 0x69, 0x83, 0xC0, 0x04, 0xC7, 
		0x00, 0x64, 0x69, 0x76, 0x00, 0x83, 0xC0, 0x04, 0xC7, 0x00, 0x6A, 0x65, 0x00, 0x6A, 0x83, 0xC0, 
		0x04, 0x66, 0xC7, 0x00, 0x7A, 0x00, 0x31, 0xC0, 0x8B, 0x45, 0x08, 0x8B, 0x4D, 0x0C, 0x31, 0xD2, 
		0xC6, 0x00, 0x00, 0x83, 0xC0, 0x01, 0x83, 0xC2, 0x01, 0x81, 0xFA, 0x80, 0x01, 0x00, 0x00, 0x75, 
		0xEF, 0xC6, 0x00, 0x21, 0x83, 0xC0, 0x01, 0xC6, 0x00, 0x21, 0x83, 0xC0, 0x01, 0xC6, 0x00, 0x21, 
		0x83, 0xC0, 0x01, 0x83, 0xE9, 0x01, 0x31, 0xD2, 0x83, 0xF9, 0x00, 0x75, 0xD3, 0x89, 0xEC, 0x5D, 
		0xC3
	}
