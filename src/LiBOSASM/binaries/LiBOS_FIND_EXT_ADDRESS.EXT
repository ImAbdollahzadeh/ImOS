[LiBOSASM 32-bit]
[ORIGIN 0x01001400]
[SECTION .CODE]
_@@__find_ext_address__@@_:
;---------_@@__find_ext_address__@@_(char* name, DWORD* ret_address)
	push   ebp
	mov    ebp,                   esp
	mov    eax,                   0x00000000
;--------eax_is_the_id=table_count
	push   eax
	mov    eax,                   DWORD[_tab_count:]
	push   eax
	mov    ecx,                   0x01000400
	add    ecx,                   0x00000040
	call   ecx
;--------call_LiBOS_GET_GLOBAL_EXT_TABLE_ATTRIBUTES.EXT_entry_point
	pop    eax
	pop    eax
	mov    eax,                   0x00000001
;--------eax_is_the_id=table_address
	push   eax
	mov    eax,                   DWORD[_tab_address:]
	push   eax
	mov    ecx,                   0x01000400
	add    ecx,                   0x00000040
	call   ecx
;--------call_LiBOS_GET_GLOBAL_EXT_TABLE_ATTRIBUTES.EXT_entry_point
	pop    eax
	pop    eax
	;--------
	mov    eax,                   DWORD[_tab_count:]
	mov    ecx,                   DWORD[eax]
	mov    edx,                   0x01000800
	add    edx,                   0x00000040
;--------now_edx_has_the_address_of_LiBOS_STRCMP.EXT_entry_point
_look_for_entry_name_match:
	cmp    ecx,                   0x00000000
	je     _look_finished_without_match:
	mov    eax,                   DWORD[_find_ext_address_int:]
	push   eax
	mov    eax,                   DWORD[ebp+0x00000008]
	push   eax
	mov    eax,                   DWORD[_tab_address:]
	push   eax
	call   edx
	pop    eax
	pop    eax
	pop    eax
	cmp    eax,                   0x00000001
	je     _found_entry_name_match:
;---------now_eax_has_the_result_of_strcmp
	mov    ebx,                   DWORD[_tab_address:]
	mov    esi,                   DWORD[ebx]
	add    esi,                   0x00000084
	mov    DWORD[ebx],            esi
	sub    ecx,                   0x00000000
	jmp    DWORD[_look_for_entry_name_match:]
_found_entry_name_match:
	mov    ebx,                   DWORD[_tab_address:]
	mov    eax,                   DWORD[ebx]
	add    eax,                   0x00000080
	mov    ebx,                   DWORD[eax]
;---------now_ebx=the_physical_address_of_the_expected_EXT_file
	mov    DWORD[ebp+0x0000000C], ebx
	jmp    DWORD[__@@libos_find_ext_address_end@@__:]
_look_finished_without_match:
	mov    DWORD[ebp+0x0000000C], 0x00000000
__@@libos_find_ext_address_end@@__:
	mov    esp,                   ebp
	pop    ebp
	ret
[SECTION .DATA]
	Dummy_string:          db 'this_is_a_dummy_string'
	_find_ext_address_int: dd 0xFFFFFFFF
	_tab_count:            dd 0xFFFFFFFF
	_tab_address:          dd 0xFFFFFFFF

........ DUMP OUTPUT BUFFER ....................................
        00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
................................................................
00:     4c 69 42 4f 53 5f 45 58 54 5f 49 4d 41 47 45 12 
10:     00 00 00 49 6d 61 6e 5f 41 62 64 6f 6c 6c 61 68 
20:     7a 61 64 65 68 0b 00 00 00 30 31 5f 4d 61 72 5f 
30:     32 30 32 30 40 00 00 00 ff 00 00 00 7c 01 00 00 
40:     55 89 e5 b8 00 00 00 00 50 b8 5b 15 00 01 50 b9 
50:     00 04 00 01 81 c1 40 00 00 00 ff d1 58 58 b8 01 
60:     00 00 00 50 b8 74 15 00 01 50 b9 00 04 00 01 81 
70:     c1 40 00 00 00 ff d1 58 58 b8 5b 15 00 01 8b 08 
80:     ba 00 08 00 01 81 c2 40 00 00 00 81 f9 00 00 00 
90:     00 0f 84 9a 14 00 01 b8 44 15 00 01 50 8b 80 08 
a0:     00 00 00 50 b8 74 15 00 01 50 ff d2 58 58 58 81 
b0:     f8 01 00 00 00 0f 84 5b 14 00 01 bb 74 15 00 01 
c0:     8b 32 81 c6 84 00 00 00 89 33 81 e9 00 00 00 00 
d0:     ff 25 8b 14 00 01 bb 74 15 00 01 8b 02 81 c0 80 
e0:     00 00 00 8b 18 89 9d 0c 00 00 00 ff 25 fb 14 00 
f0:     01 c7 85 0c 00 00 00 00 00 00 00 89 ec 5d c3 44 
100:    75 6d 6d 79 5f 73 74 72 69 6e 67 3a 16 00 00 00 
110:    74 68 69 73 5f 69 73 5f 61 5f 64 75 6d 6d 79 5f 
120:    73 74 72 69 6e 67 01 00 00 00 5f 66 69 6e 64 5f 
130:    65 78 74 5f 61 64 64 72 65 73 73 5f 69 6e 74 3a 
140:    04 00 00 00 ff ff ff ff 04 00 00 00 5f 74 61 62 
150:    5f 63 6f 75 6e 74 3a 04 00 00 00 ff ff ff ff 04 
160:    00 00 00 5f 74 61 62 5f 61 64 64 72 65 73 73 3a 
170:    04 00 00 00 ff ff ff ff 04 00 00 00 

........ DUMP OUTPUT BUFFER (ASCII) ............................
        00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
................................................................
00:     L  i  B  O  S  _  E  X  T  _  I  M  A  G  E  .  
10:     .  .  .  I  m  a  n  _  A  b  d  o  l  l  a  h  
20:     z  a  d  e  h  .  .  .  .  0  1  _  M  a  r  _  
30:     2  0  2  0  @  .  .  .  .  .  .  .  |  .  .  .  
40:     U  .  .  .  .  .  .  .  P  .  [  .  .  .  P  .  
50:     .  .  .  .  .  .  @  .  .  .  .  .  X  X  .  .  
60:     .  .  .  P  .  t  .  .  .  P  .  .  .  .  .  .  
70:     .  @  .  .  .  .  .  X  X  .  [  .  .  .  .  .  
80:     .  .  .  .  .  .  .  @  .  .  .  .  .  .  .  .  
90:     .  .  .  .  .  .  .  .  D  .  .  .  P  .  .  .  
a0:     .  .  .  P  .  t  .  .  .  P  .  .  X  X  X  .  
b0:     .  .  .  .  .  .  .  [  .  .  .  .  t  .  .  .  
c0:     .  2  .  .  .  .  .  .  .  3  .  .  .  .  .  .  
d0:     .  %  .  .  .  .  .  t  .  .  .  .  .  .  .  .  
e0:     .  .  .  .  .  .  .  .  .  .  .  .  %  .  .  .  
f0:     .  .  .  .  .  .  .  .  .  .  .  .  .  ]  .  D  
100:    u  m  m  y  _  s  t  r  i  n  g  :  .  .  .  .  
110:    t  h  i  s  _  i  s  _  a  _  d  u  m  m  y  _  
120:    s  t  r  i  n  g  .  .  .  .  _  f  i  n  d  _  
130:    e  x  t  _  a  d  d  r  e  s  s  _  i  n  t  :  
140:    .  .  .  .  .  .  .  .  .  .  .  .  _  t  a  b  
150:    _  c  o  u  n  t  :  .  .  .  .  .  .  .  .  .  
160:    .  .  .  _  t  a  b  _  a  d  d  r  e  s  s  :  
170:    .  .  .  .  .  .  .  .  .  .  .  .  
................................................................

